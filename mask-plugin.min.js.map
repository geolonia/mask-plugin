{"version":3,"sources":["webpack://@geolonia/mask-plugin/./node_modules/@turf/bbox-polygon/dist/js/index.js","webpack://@geolonia/mask-plugin/./node_modules/@turf/difference/dist/js/index.js","webpack://@geolonia/mask-plugin/./node_modules/@turf/helpers/dist/js/index.js","webpack://@geolonia/mask-plugin/./node_modules/@turf/invariant/dist/js/index.js","webpack://@geolonia/mask-plugin/./node_modules/polygon-clipping/dist/polygon-clipping.umd.js","webpack://@geolonia/mask-plugin/./src/index.ts","webpack://@geolonia/mask-plugin/./src/style.ts","webpack://@geolonia/mask-plugin/./src/utils.ts","webpack://@geolonia/mask-plugin/webpack/bootstrap","webpack://@geolonia/mask-plugin/webpack/startup"],"names":["Object","defineProperty","exports","value","helpers_1","default","bbox","options","west","Number","south","east","north","length","Error","lowLeft","topLeft","topRight","lowRight","polygon","properties","id","ex","polygonClipping","helpers","invariant","module","polygon1","polygon2","geom1","getGeom","geom2","differenced","difference","coordinates","multiPolygon","feature","geom","feat","type","geometry","point","Array","isArray","isNumber","_i","coordinates_1","ring","j","lineString","featureCollection","features","fc","multiLineString","multiPoint","radiansToLength","radians","units","factor","factors","lengthToRadians","distance","radiansToDegrees","Math","PI","num","isNaN","earthRadius","centimeters","centimetres","degrees","feet","inches","kilometers","kilometres","meters","metres","miles","millimeters","millimetres","nauticalmiles","yards","unitsFactors","areaFactors","acres","hectares","_options","points","map","coords","polygons","lineStrings","geometryCollection","geometries","round","precision","multiplier","pow","lengthToDegrees","bearingToAzimuth","bearing","angle","degreesToRadians","convertLength","originalUnit","finalUnit","convertArea","area","startFactor","finalFactor","isObject","input","constructor","validateBBox","forEach","validateId","indexOf","getCoord","coord","getCoords","containsNumber","geojsonType","name","featureOf","collectionOf","_a","geojson","getType","_name","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","prototype","Node","data","this","next","left","right","DEFAULT_COMPARE","a","b","splay","t","comparator","N","l","r","cmp","y","insert","node","split","v","printRow","root","prefix","isTail","out","printNode","indent","Tree","_root","_size","_comparator","add","remove","_remove","x","pop","findStatic","current","compare","find","contains","visitor","ctx","Q","done","push","call","range","low","high","fn","keys","values","min","minNode","max","maxNode","at","index","d","successor","prev","predecessor","clear","toList","head","p","load","presort","size","sort","loadRecursive","mergedList","l1","l2","p1","p2","mergeLists","createList","sortedListToBST","isEmpty","get","toString","n","String","join","update","newKey","newData","merge","start","end","middle","floor","list","pivot","tmp","isInBbox","ll","ur","getBboxOverlap","b1","b2","lowerX","upperX","epsilon","EPSILON","undefined","EPSILON_SQ","ab","PtRounder","reset","xRounder","CoordRounder","yRounder","tree","prevNode","nextNode","rounder","crossProduct","dotProduct","compareVectorAngles","basePt","endPt1","endPt2","v1","v2","kross","sqrt","cosineOfAngle","pShared","pBase","pAngle","vBase","vAngle","horizontalIntersection","pt","verticalIntersection","SweepEvent","isLeft","events","ptCmp","comparePoints","link","Segment","segment","aPt","bPt","other","otherEvents","iMax","evt","checkForConsuming","numEvents","evt1","consumedBy","evt2","otherSE","consume","ringOut","isInResult","baseEvent","_this","cache","Map","fillCache","linkedEvent","nextEvent","set","sine","cosine","has","_cache$get","asine","acosine","_cache$get2","bsine","bcosine","segmentId","leftSE","rightSE","rings","windings","alx","blx","arx","brx","aly","bly","ary","bry","aCmpBLeft","comparePoint","bCmpARight","bCmpALeft","aCmpBRight","_bCmpARight","_aCmpBRight","ay","ax","by","bx","newRightSE","y1","y2","isAnEndpoint","lPt","rPt","vector","yDist","xFromYDist","xDist","yFromXDist","tBbox","oBbox","bboxOverlap","tlp","trp","olp","orp","touchesOtherLSE","touchesThisLSE","touchesOtherRSE","touchesThisRSE","pt1","pt2","ve","d1","d2","intersection","newEvents","alreadyLinked","newLeftSE","oldRightSE","replaceRightSE","newSeg","slice","swapEvents","tmpEvt","consumer","consumee","_tmp","winding","_prevInResult","prevInResult","_beforeState","seg","afterState","multiPolys","_afterState","beforeState","ringsAfter","windingsAfter","mpsAfter","polysAfter","polysExclude","_iMax","_ring","poly","isExterior","_index","splice","_i2","_iMax2","mp","multiPoly","_isInResult","mpsBefore","operation","noBefores","noAfters","least","most","numMultiPolys","diff","abs","isJustSubject","mps","isSubject","concat","leftPt","rightPt","cmpPts","RingIn","geomRing","segments","firstPoint","prevPoint","fromRing","sweepEvents","PolyIn","geomPoly","exteriorRing","interiorRings","getSweepEvents","ringSweepEvents","jMax","MultiPolyIn","polys","POSITIVE_INFINITY","NEGATIVE_INFINITY","polySweepEvents","RingOut","allSegments","ringsOut","prevEvent","event","startingPoint","intersectionLEs","availableLEs","getAvailableLinkedEvents","firstPt","lastPt","indexLE","getLeftmostComparator","intersectionLE","ringEvents","unshift","reverse","prevPt","_pt","_nextPt","nextPt","shift","step","isExteriorRing","iStart","iEnd","orderedPoints","_isExteriorRing","enclosing","enclosingRing","_enclosingRing","_calcEnclosingRing","leftMostEvt","prevSeg","prevPrevSeg","PolyOut","ringGeom","MultiPolyOut","_composePolys","polyGeom","addInterior","SweepLine","queue","arguments","nextSeg","prevMySplitter","prevInter","getIntersection","newEventsFromSplit","_splitSafely","nextMySplitter","nextInter","_newEventsFromSplit","mySplitter","_newEventsFromSplit2","inter","_newEventsFromSplit3","_i3","_iMax3","_newEventsFromSplit4","_i4","_iMax4","POLYGON_CLIPPING_MAX_QUEUE_SIZE","process","env","POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS","Operation","moreGeoms","multipolys","subject","mpA","_j","_jMax","sweepLine","prevQueueSize","_evt","factory","union","_len","_key","run","_len2","_key2","xor","_len3","_key3","subjectGeom","_len4","clippingGeoms","_key4","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","e","rejected","result","then","apply","__generator","body","f","g","_","label","sent","trys","ops","verb","Symbol","iterator","op","__importDefault","mod","__esModule","bbox_polygon_1","difference_1","utils_1","style_1","window","geolonia","registerPlugin","atts","on","maskGeojsonObject","inner","fillMask","geojsonBounds","fittedBounds","_b","bottom","_c","top","outer","donut","_d","parseGeoJSONAtt","maskGeojson","isPolygonFeature","toUpperCase","getBbox","fitBounds","duration","padding","getBounds","setMaxBounds","toArray","addSource","addLayer","maskStyle","source","filter","paint","toLowerCase","att","json","el","str","test","document","querySelector","isCssSelector","textContent","JSON","parse","error","console","fetch","obj","firstX","firstY","initialBbox","reduce","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"mappings":"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","file":"mask-plugin.min.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Takes a bbox and returns an equivalent {@link Polygon|polygon}.\n *\n * @name bboxPolygon\n * @param {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @param {Object} [options={}] Optional parameters\n * @param {Properties} [options.properties={}] Translate properties to Polygon\n * @param {string|number} [options.id={}] Translate Id to Polygon\n * @returns {Feature<Polygon>} a Polygon representation of the bounding box\n * @example\n * var bbox = [0, 0, 10, 10];\n *\n * var poly = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [poly]\n */\nfunction bboxPolygon(bbox, options) {\n    if (options === void 0) { options = {}; }\n    // Convert BBox positions to Numbers\n    // No performance loss for including Number()\n    // https://github.com/Turfjs/turf/issues/1119\n    var west = Number(bbox[0]);\n    var south = Number(bbox[1]);\n    var east = Number(bbox[2]);\n    var north = Number(bbox[3]);\n    if (bbox.length === 6) {\n        throw new Error(\"@turf/bbox-polygon does not support BBox with 6 positions\");\n    }\n    var lowLeft = [west, south];\n    var topLeft = [west, north];\n    var topRight = [east, north];\n    var lowRight = [east, south];\n    return helpers_1.polygon([[lowLeft, lowRight, topRight, topLeft, lowLeft]], options.properties, { bbox: bbox, id: options.id });\n}\nexports.default = bboxPolygon;\n","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar polygonClipping = _interopDefault(require('polygon-clipping'));\nvar helpers = require('@turf/helpers');\nvar invariant = require('@turf/invariant');\n\n/**\n * Finds the difference between two {@link Polygon|polygons} by clipping the second polygon from the first.\n *\n * @name difference\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @returns {Feature<Polygon|MultiPolygon>|null} a Polygon or MultiPolygon feature showing the area of `polygon1` excluding the area of `polygon2` (if empty returns `null`)\n * @example\n * var polygon1 = turf.polygon([[\n *   [128, -26],\n *   [141, -26],\n *   [141, -21],\n *   [128, -21],\n *   [128, -26]\n * ]], {\n *   \"fill\": \"#F00\",\n *   \"fill-opacity\": 0.1\n * });\n * var polygon2 = turf.polygon([[\n *   [126, -28],\n *   [140, -28],\n *   [140, -20],\n *   [126, -20],\n *   [126, -28]\n * ]], {\n *   \"fill\": \"#00F\",\n *   \"fill-opacity\": 0.1\n * });\n *\n * var difference = turf.difference(polygon1, polygon2);\n *\n * //addToMap\n * var addToMap = [polygon1, polygon2, difference];\n */\nfunction difference(polygon1, polygon2) {\n  var geom1 = invariant.getGeom(polygon1);\n  var geom2 = invariant.getGeom(polygon2);\n  var properties = polygon1.properties || {};\n\n  var differenced = polygonClipping.difference(\n    geom1.coordinates,\n    geom2.coordinates\n  );\n  if (differenced.length === 0) return null;\n  if (differenced.length === 1) return helpers.polygon(differenced[0], properties);\n  return helpers.multiPolygon(differenced, properties);\n}\n\nmodule.exports = difference;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.37,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius / 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1 / 1.0936,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return !!input && input.constructor === Object;\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord) {\n    if (!coord) {\n        throw new Error(\"coord is required\");\n    }\n    if (!Array.isArray(coord)) {\n        if (coord.type === \"Feature\" &&\n            coord.geometry !== null &&\n            coord.geometry.type === \"Point\") {\n            return coord.geometry.coordinates;\n        }\n        if (coord.type === \"Point\") {\n            return coord.coordinates;\n        }\n    }\n    if (Array.isArray(coord) &&\n        coord.length >= 2 &&\n        !Array.isArray(coord[0]) &&\n        !Array.isArray(coord[1])) {\n        return coord;\n    }\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\nexports.getCoord = getCoord;\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(coords) {\n    if (Array.isArray(coords)) {\n        return coords;\n    }\n    // Feature\n    if (coords.type === \"Feature\") {\n        if (coords.geometry !== null) {\n            return coords.geometry.coordinates;\n        }\n    }\n    else {\n        // Geometry\n        if (coords.coordinates) {\n            return coords.coordinates;\n        }\n    }\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\n}\nexports.getCoords = getCoords;\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        helpers_1.isNumber(coordinates[0]) &&\n        helpers_1.isNumber(coordinates[1])) {\n        return true;\n    }\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error(\"coordinates must only contain numbers\");\n}\nexports.containsNumber = containsNumber;\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) {\n        throw new Error(\"type and name required\");\n    }\n    if (!value || value.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            value.type);\n    }\n}\nexports.geojsonType = geojsonType;\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) {\n        throw new Error(\"No feature passed\");\n    }\n    if (!name) {\n        throw new Error(\".featureOf() requires a name\");\n    }\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            feature.geometry.type);\n    }\n}\nexports.featureOf = featureOf;\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) {\n        throw new Error(\"No featureCollection passed\");\n    }\n    if (!name) {\n        throw new Error(\".collectionOf() requires a name\");\n    }\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\n    }\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\n        var feature = _a[_i];\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error(\"Invalid input to \" +\n                name +\n                \": must be a \" +\n                type +\n                \", given \" +\n                feature.geometry.type);\n        }\n    }\n}\nexports.collectionOf = collectionOf;\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (geojson.type === \"Feature\") {\n        return geojson.geometry;\n    }\n    return geojson;\n}\nexports.getGeom = getGeom;\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, _name) {\n    if (geojson.type === \"FeatureCollection\") {\n        return \"FeatureCollection\";\n    }\n    if (geojson.type === \"GeometryCollection\") {\n        return \"GeometryCollection\";\n    }\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n        return geojson.geometry.type;\n    }\n    return geojson.type;\n}\nexports.getType = getType;\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.polygonClipping = factory());\n}(this, (function () { 'use strict';\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  /**\n   * splaytree v3.1.0\n   * Fast Splay tree for Node and browser\n   *\n   * @author Alexander Milevski <info@w8r.name>\n   * @license MIT\n   * @preserve\n   */\n  var Node =\n  /** @class */\n  function () {\n    function Node(key, data) {\n      this.next = null;\n      this.key = key;\n      this.data = data;\n      this.left = null;\n      this.right = null;\n    }\n\n    return Node;\n  }();\n  /* follows \"An implementation of top-down splaying\"\r\n   * by D. Sleator <sleator@cs.cmu.edu> March 1992\r\n   */\n\n\n  function DEFAULT_COMPARE(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n  /**\r\n   * Simple top down splay, not requiring i to be in the tree t.\r\n   */\n\n\n  function splay(i, t, comparator) {\n    var N = new Node(null, null);\n    var l = N;\n    var r = N;\n\n    while (true) {\n      var cmp = comparator(i, t.key); //if (i < t.key) {\n\n      if (cmp < 0) {\n        if (t.left === null) break; //if (i < t.left.key) {\n\n        if (comparator(i, t.left.key) < 0) {\n          var y = t.left;\n          /* rotate right */\n\n          t.left = y.right;\n          y.right = t;\n          t = y;\n          if (t.left === null) break;\n        }\n\n        r.left = t;\n        /* link right */\n\n        r = t;\n        t = t.left; //} else if (i > t.key) {\n      } else if (cmp > 0) {\n        if (t.right === null) break; //if (i > t.right.key) {\n\n        if (comparator(i, t.right.key) > 0) {\n          var y = t.right;\n          /* rotate left */\n\n          t.right = y.left;\n          y.left = t;\n          t = y;\n          if (t.right === null) break;\n        }\n\n        l.right = t;\n        /* link left */\n\n        l = t;\n        t = t.right;\n      } else break;\n    }\n    /* assemble */\n\n\n    l.right = t.left;\n    r.left = t.right;\n    t.left = N.right;\n    t.right = N.left;\n    return t;\n  }\n\n  function insert(i, data, t, comparator) {\n    var node = new Node(i, data);\n\n    if (t === null) {\n      node.left = node.right = null;\n      return node;\n    }\n\n    t = splay(i, t, comparator);\n    var cmp = comparator(i, t.key);\n\n    if (cmp < 0) {\n      node.left = t.left;\n      node.right = t;\n      t.left = null;\n    } else if (cmp >= 0) {\n      node.right = t.right;\n      node.left = t;\n      t.right = null;\n    }\n\n    return node;\n  }\n\n  function split(key, v, comparator) {\n    var left = null;\n    var right = null;\n\n    if (v) {\n      v = splay(key, v, comparator);\n      var cmp = comparator(v.key, key);\n\n      if (cmp === 0) {\n        left = v.left;\n        right = v.right;\n      } else if (cmp < 0) {\n        right = v.right;\n        v.right = null;\n        left = v;\n      } else {\n        left = v.left;\n        v.left = null;\n        right = v;\n      }\n    }\n\n    return {\n      left: left,\n      right: right\n    };\n  }\n\n  function merge(left, right, comparator) {\n    if (right === null) return left;\n    if (left === null) return right;\n    right = splay(left.key, right, comparator);\n    right.left = left;\n    return right;\n  }\n  /**\r\n   * Prints level of the tree\r\n   */\n\n\n  function printRow(root, prefix, isTail, out, printNode) {\n    if (root) {\n      out(\"\" + prefix + (isTail ? '└── ' : '├── ') + printNode(root) + \"\\n\");\n      var indent = prefix + (isTail ? '    ' : '│   ');\n      if (root.left) printRow(root.left, indent, false, out, printNode);\n      if (root.right) printRow(root.right, indent, true, out, printNode);\n    }\n  }\n\n  var Tree =\n  /** @class */\n  function () {\n    function Tree(comparator) {\n      if (comparator === void 0) {\n        comparator = DEFAULT_COMPARE;\n      }\n\n      this._root = null;\n      this._size = 0;\n      this._comparator = comparator;\n    }\n    /**\r\n     * Inserts a key, allows duplicates\r\n     */\n\n\n    Tree.prototype.insert = function (key, data) {\n      this._size++;\n      return this._root = insert(key, data, this._root, this._comparator);\n    };\n    /**\r\n     * Adds a key, if it is not present in the tree\r\n     */\n\n\n    Tree.prototype.add = function (key, data) {\n      var node = new Node(key, data);\n\n      if (this._root === null) {\n        node.left = node.right = null;\n        this._size++;\n        this._root = node;\n      }\n\n      var comparator = this._comparator;\n      var t = splay(key, this._root, comparator);\n      var cmp = comparator(key, t.key);\n      if (cmp === 0) this._root = t;else {\n        if (cmp < 0) {\n          node.left = t.left;\n          node.right = t;\n          t.left = null;\n        } else if (cmp > 0) {\n          node.right = t.right;\n          node.left = t;\n          t.right = null;\n        }\n\n        this._size++;\n        this._root = node;\n      }\n      return this._root;\n    };\n    /**\r\n     * @param  {Key} key\r\n     * @return {Node|null}\r\n     */\n\n\n    Tree.prototype.remove = function (key) {\n      this._root = this._remove(key, this._root, this._comparator);\n    };\n    /**\r\n     * Deletes i from the tree if it's there\r\n     */\n\n\n    Tree.prototype._remove = function (i, t, comparator) {\n      var x;\n      if (t === null) return null;\n      t = splay(i, t, comparator);\n      var cmp = comparator(i, t.key);\n\n      if (cmp === 0) {\n        /* found it */\n        if (t.left === null) {\n          x = t.right;\n        } else {\n          x = splay(i, t.left, comparator);\n          x.right = t.right;\n        }\n\n        this._size--;\n        return x;\n      }\n\n      return t;\n      /* It wasn't there */\n    };\n    /**\r\n     * Removes and returns the node with smallest key\r\n     */\n\n\n    Tree.prototype.pop = function () {\n      var node = this._root;\n\n      if (node) {\n        while (node.left) {\n          node = node.left;\n        }\n\n        this._root = splay(node.key, this._root, this._comparator);\n        this._root = this._remove(node.key, this._root, this._comparator);\n        return {\n          key: node.key,\n          data: node.data\n        };\n      }\n\n      return null;\n    };\n    /**\r\n     * Find without splaying\r\n     */\n\n\n    Tree.prototype.findStatic = function (key) {\n      var current = this._root;\n      var compare = this._comparator;\n\n      while (current) {\n        var cmp = compare(key, current.key);\n        if (cmp === 0) return current;else if (cmp < 0) current = current.left;else current = current.right;\n      }\n\n      return null;\n    };\n\n    Tree.prototype.find = function (key) {\n      if (this._root) {\n        this._root = splay(key, this._root, this._comparator);\n        if (this._comparator(key, this._root.key) !== 0) return null;\n      }\n\n      return this._root;\n    };\n\n    Tree.prototype.contains = function (key) {\n      var current = this._root;\n      var compare = this._comparator;\n\n      while (current) {\n        var cmp = compare(key, current.key);\n        if (cmp === 0) return true;else if (cmp < 0) current = current.left;else current = current.right;\n      }\n\n      return false;\n    };\n\n    Tree.prototype.forEach = function (visitor, ctx) {\n      var current = this._root;\n      var Q = [];\n      /* Initialize stack s */\n\n      var done = false;\n\n      while (!done) {\n        if (current !== null) {\n          Q.push(current);\n          current = current.left;\n        } else {\n          if (Q.length !== 0) {\n            current = Q.pop();\n            visitor.call(ctx, current);\n            current = current.right;\n          } else done = true;\n        }\n      }\n\n      return this;\n    };\n    /**\r\n     * Walk key range from `low` to `high`. Stops if `fn` returns a value.\r\n     */\n\n\n    Tree.prototype.range = function (low, high, fn, ctx) {\n      var Q = [];\n      var compare = this._comparator;\n      var node = this._root;\n      var cmp;\n\n      while (Q.length !== 0 || node) {\n        if (node) {\n          Q.push(node);\n          node = node.left;\n        } else {\n          node = Q.pop();\n          cmp = compare(node.key, high);\n\n          if (cmp > 0) {\n            break;\n          } else if (compare(node.key, low) >= 0) {\n            if (fn.call(ctx, node)) return this; // stop if smth is returned\n          }\n\n          node = node.right;\n        }\n      }\n\n      return this;\n    };\n    /**\r\n     * Returns array of keys\r\n     */\n\n\n    Tree.prototype.keys = function () {\n      var keys = [];\n      this.forEach(function (_a) {\n        var key = _a.key;\n        return keys.push(key);\n      });\n      return keys;\n    };\n    /**\r\n     * Returns array of all the data in the nodes\r\n     */\n\n\n    Tree.prototype.values = function () {\n      var values = [];\n      this.forEach(function (_a) {\n        var data = _a.data;\n        return values.push(data);\n      });\n      return values;\n    };\n\n    Tree.prototype.min = function () {\n      if (this._root) return this.minNode(this._root).key;\n      return null;\n    };\n\n    Tree.prototype.max = function () {\n      if (this._root) return this.maxNode(this._root).key;\n      return null;\n    };\n\n    Tree.prototype.minNode = function (t) {\n      if (t === void 0) {\n        t = this._root;\n      }\n\n      if (t) while (t.left) {\n        t = t.left;\n      }\n      return t;\n    };\n\n    Tree.prototype.maxNode = function (t) {\n      if (t === void 0) {\n        t = this._root;\n      }\n\n      if (t) while (t.right) {\n        t = t.right;\n      }\n      return t;\n    };\n    /**\r\n     * Returns node at given index\r\n     */\n\n\n    Tree.prototype.at = function (index) {\n      var current = this._root;\n      var done = false;\n      var i = 0;\n      var Q = [];\n\n      while (!done) {\n        if (current) {\n          Q.push(current);\n          current = current.left;\n        } else {\n          if (Q.length > 0) {\n            current = Q.pop();\n            if (i === index) return current;\n            i++;\n            current = current.right;\n          } else done = true;\n        }\n      }\n\n      return null;\n    };\n\n    Tree.prototype.next = function (d) {\n      var root = this._root;\n      var successor = null;\n\n      if (d.right) {\n        successor = d.right;\n\n        while (successor.left) {\n          successor = successor.left;\n        }\n\n        return successor;\n      }\n\n      var comparator = this._comparator;\n\n      while (root) {\n        var cmp = comparator(d.key, root.key);\n        if (cmp === 0) break;else if (cmp < 0) {\n          successor = root;\n          root = root.left;\n        } else root = root.right;\n      }\n\n      return successor;\n    };\n\n    Tree.prototype.prev = function (d) {\n      var root = this._root;\n      var predecessor = null;\n\n      if (d.left !== null) {\n        predecessor = d.left;\n\n        while (predecessor.right) {\n          predecessor = predecessor.right;\n        }\n\n        return predecessor;\n      }\n\n      var comparator = this._comparator;\n\n      while (root) {\n        var cmp = comparator(d.key, root.key);\n        if (cmp === 0) break;else if (cmp < 0) root = root.left;else {\n          predecessor = root;\n          root = root.right;\n        }\n      }\n\n      return predecessor;\n    };\n\n    Tree.prototype.clear = function () {\n      this._root = null;\n      this._size = 0;\n      return this;\n    };\n\n    Tree.prototype.toList = function () {\n      return toList(this._root);\n    };\n    /**\r\n     * Bulk-load items. Both array have to be same size\r\n     */\n\n\n    Tree.prototype.load = function (keys, values, presort) {\n      if (values === void 0) {\n        values = [];\n      }\n\n      if (presort === void 0) {\n        presort = false;\n      }\n\n      var size = keys.length;\n      var comparator = this._comparator; // sort if needed\n\n      if (presort) sort(keys, values, 0, size - 1, comparator);\n\n      if (this._root === null) {\n        // empty tree\n        this._root = loadRecursive(keys, values, 0, size);\n        this._size = size;\n      } else {\n        // that re-builds the whole tree from two in-order traversals\n        var mergedList = mergeLists(this.toList(), createList(keys, values), comparator);\n        size = this._size + size;\n        this._root = sortedListToBST({\n          head: mergedList\n        }, 0, size);\n      }\n\n      return this;\n    };\n\n    Tree.prototype.isEmpty = function () {\n      return this._root === null;\n    };\n\n    Object.defineProperty(Tree.prototype, \"size\", {\n      get: function get() {\n        return this._size;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Tree.prototype, \"root\", {\n      get: function get() {\n        return this._root;\n      },\n      enumerable: true,\n      configurable: true\n    });\n\n    Tree.prototype.toString = function (printNode) {\n      if (printNode === void 0) {\n        printNode = function printNode(n) {\n          return String(n.key);\n        };\n      }\n\n      var out = [];\n      printRow(this._root, '', true, function (v) {\n        return out.push(v);\n      }, printNode);\n      return out.join('');\n    };\n\n    Tree.prototype.update = function (key, newKey, newData) {\n      var comparator = this._comparator;\n\n      var _a = split(key, this._root, comparator),\n          left = _a.left,\n          right = _a.right;\n\n      if (comparator(key, newKey) < 0) {\n        right = insert(newKey, newData, right, comparator);\n      } else {\n        left = insert(newKey, newData, left, comparator);\n      }\n\n      this._root = merge(left, right, comparator);\n    };\n\n    Tree.prototype.split = function (key) {\n      return split(key, this._root, this._comparator);\n    };\n\n    return Tree;\n  }();\n\n  function loadRecursive(keys, values, start, end) {\n    var size = end - start;\n\n    if (size > 0) {\n      var middle = start + Math.floor(size / 2);\n      var key = keys[middle];\n      var data = values[middle];\n      var node = new Node(key, data);\n      node.left = loadRecursive(keys, values, start, middle);\n      node.right = loadRecursive(keys, values, middle + 1, end);\n      return node;\n    }\n\n    return null;\n  }\n\n  function createList(keys, values) {\n    var head = new Node(null, null);\n    var p = head;\n\n    for (var i = 0; i < keys.length; i++) {\n      p = p.next = new Node(keys[i], values[i]);\n    }\n\n    p.next = null;\n    return head.next;\n  }\n\n  function toList(root) {\n    var current = root;\n    var Q = [];\n    var done = false;\n    var head = new Node(null, null);\n    var p = head;\n\n    while (!done) {\n      if (current) {\n        Q.push(current);\n        current = current.left;\n      } else {\n        if (Q.length > 0) {\n          current = p = p.next = Q.pop();\n          current = current.right;\n        } else done = true;\n      }\n    }\n\n    p.next = null; // that'll work even if the tree was empty\n\n    return head.next;\n  }\n\n  function sortedListToBST(list, start, end) {\n    var size = end - start;\n\n    if (size > 0) {\n      var middle = start + Math.floor(size / 2);\n      var left = sortedListToBST(list, start, middle);\n      var root = list.head;\n      root.left = left;\n      list.head = list.head.next;\n      root.right = sortedListToBST(list, middle + 1, end);\n      return root;\n    }\n\n    return null;\n  }\n\n  function mergeLists(l1, l2, compare) {\n    var head = new Node(null, null); // dummy\n\n    var p = head;\n    var p1 = l1;\n    var p2 = l2;\n\n    while (p1 !== null && p2 !== null) {\n      if (compare(p1.key, p2.key) < 0) {\n        p.next = p1;\n        p1 = p1.next;\n      } else {\n        p.next = p2;\n        p2 = p2.next;\n      }\n\n      p = p.next;\n    }\n\n    if (p1 !== null) {\n      p.next = p1;\n    } else if (p2 !== null) {\n      p.next = p2;\n    }\n\n    return head.next;\n  }\n\n  function sort(keys, values, left, right, compare) {\n    if (left >= right) return;\n    var pivot = keys[left + right >> 1];\n    var i = left - 1;\n    var j = right + 1;\n\n    while (true) {\n      do {\n        i++;\n      } while (compare(keys[i], pivot) < 0);\n\n      do {\n        j--;\n      } while (compare(keys[j], pivot) > 0);\n\n      if (i >= j) break;\n      var tmp = keys[i];\n      keys[i] = keys[j];\n      keys[j] = tmp;\n      tmp = values[i];\n      values[i] = values[j];\n      values[j] = tmp;\n    }\n\n    sort(keys, values, left, j, compare);\n    sort(keys, values, j + 1, right, compare);\n  }\n\n  /**\n   * A bounding box has the format:\n   *\n   *  { ll: { x: xmin, y: ymin }, ur: { x: xmax, y: ymax } }\n   *\n   */\n  var isInBbox = function isInBbox(bbox, point) {\n    return bbox.ll.x <= point.x && point.x <= bbox.ur.x && bbox.ll.y <= point.y && point.y <= bbox.ur.y;\n  };\n  /* Returns either null, or a bbox (aka an ordered pair of points)\n   * If there is only one point of overlap, a bbox with identical points\n   * will be returned */\n\n  var getBboxOverlap = function getBboxOverlap(b1, b2) {\n    // check if the bboxes overlap at all\n    if (b2.ur.x < b1.ll.x || b1.ur.x < b2.ll.x || b2.ur.y < b1.ll.y || b1.ur.y < b2.ll.y) return null; // find the middle two X values\n\n    var lowerX = b1.ll.x < b2.ll.x ? b2.ll.x : b1.ll.x;\n    var upperX = b1.ur.x < b2.ur.x ? b1.ur.x : b2.ur.x; // find the middle two Y values\n\n    var lowerY = b1.ll.y < b2.ll.y ? b2.ll.y : b1.ll.y;\n    var upperY = b1.ur.y < b2.ur.y ? b1.ur.y : b2.ur.y; // put those middle values together to get the overlap\n\n    return {\n      ll: {\n        x: lowerX,\n        y: lowerY\n      },\n      ur: {\n        x: upperX,\n        y: upperY\n      }\n    };\n  };\n\n  /* Javascript doesn't do integer math. Everything is\n   * floating point with percision Number.EPSILON.\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\n   */\n  var epsilon = Number.EPSILON; // IE Polyfill\n\n  if (epsilon === undefined) epsilon = Math.pow(2, -52);\n  var EPSILON_SQ = epsilon * epsilon;\n  /* FLP comparator */\n\n  var cmp = function cmp(a, b) {\n    // check if they're both 0\n    if (-epsilon < a && a < epsilon) {\n      if (-epsilon < b && b < epsilon) {\n        return 0;\n      }\n    } // check if they're flp equal\n\n\n    var ab = a - b;\n\n    if (ab * ab < EPSILON_SQ * a * b) {\n      return 0;\n    } // normal comparison\n\n\n    return a < b ? -1 : 1;\n  };\n\n  /**\n   * This class rounds incoming values sufficiently so that\n   * floating points problems are, for the most part, avoided.\n   *\n   * Incoming points are have their x & y values tested against\n   * all previously seen x & y values. If either is 'too close'\n   * to a previously seen value, it's value is 'snapped' to the\n   * previously seen value.\n   *\n   * All points should be rounded by this class before being\n   * stored in any data structures in the rest of this algorithm.\n   */\n\n  var PtRounder = /*#__PURE__*/function () {\n    function PtRounder() {\n      _classCallCheck(this, PtRounder);\n\n      this.reset();\n    }\n\n    _createClass(PtRounder, [{\n      key: \"reset\",\n      value: function reset() {\n        this.xRounder = new CoordRounder();\n        this.yRounder = new CoordRounder();\n      }\n    }, {\n      key: \"round\",\n      value: function round(x, y) {\n        return {\n          x: this.xRounder.round(x),\n          y: this.yRounder.round(y)\n        };\n      }\n    }]);\n\n    return PtRounder;\n  }();\n\n  var CoordRounder = /*#__PURE__*/function () {\n    function CoordRounder() {\n      _classCallCheck(this, CoordRounder);\n\n      this.tree = new Tree(); // preseed with 0 so we don't end up with values < Number.EPSILON\n\n      this.round(0);\n    } // Note: this can rounds input values backwards or forwards.\n    //       You might ask, why not restrict this to just rounding\n    //       forwards? Wouldn't that allow left endpoints to always\n    //       remain left endpoints during splitting (never change to\n    //       right). No - it wouldn't, because we snap intersections\n    //       to endpoints (to establish independence from the segment\n    //       angle for t-intersections).\n\n\n    _createClass(CoordRounder, [{\n      key: \"round\",\n      value: function round(coord) {\n        var node = this.tree.add(coord);\n        var prevNode = this.tree.prev(node);\n\n        if (prevNode !== null && cmp(node.key, prevNode.key) === 0) {\n          this.tree.remove(coord);\n          return prevNode.key;\n        }\n\n        var nextNode = this.tree.next(node);\n\n        if (nextNode !== null && cmp(node.key, nextNode.key) === 0) {\n          this.tree.remove(coord);\n          return nextNode.key;\n        }\n\n        return coord;\n      }\n    }]);\n\n    return CoordRounder;\n  }(); // singleton available by import\n\n\n  var rounder = new PtRounder();\n\n  /* Cross Product of two vectors with first point at origin */\n\n  var crossProduct = function crossProduct(a, b) {\n    return a.x * b.y - a.y * b.x;\n  };\n  /* Dot Product of two vectors with first point at origin */\n\n  var dotProduct = function dotProduct(a, b) {\n    return a.x * b.x + a.y * b.y;\n  };\n  /* Comparator for two vectors with same starting point */\n\n  var compareVectorAngles = function compareVectorAngles(basePt, endPt1, endPt2) {\n    var v1 = {\n      x: endPt1.x - basePt.x,\n      y: endPt1.y - basePt.y\n    };\n    var v2 = {\n      x: endPt2.x - basePt.x,\n      y: endPt2.y - basePt.y\n    };\n    var kross = crossProduct(v1, v2);\n    return cmp(kross, 0);\n  };\n  var length = function length(v) {\n    return Math.sqrt(dotProduct(v, v));\n  };\n  /* Get the sine of the angle from pShared -> pAngle to pShaed -> pBase */\n\n  var sineOfAngle = function sineOfAngle(pShared, pBase, pAngle) {\n    var vBase = {\n      x: pBase.x - pShared.x,\n      y: pBase.y - pShared.y\n    };\n    var vAngle = {\n      x: pAngle.x - pShared.x,\n      y: pAngle.y - pShared.y\n    };\n    return crossProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n  };\n  /* Get the cosine of the angle from pShared -> pAngle to pShaed -> pBase */\n\n  var cosineOfAngle = function cosineOfAngle(pShared, pBase, pAngle) {\n    var vBase = {\n      x: pBase.x - pShared.x,\n      y: pBase.y - pShared.y\n    };\n    var vAngle = {\n      x: pAngle.x - pShared.x,\n      y: pAngle.y - pShared.y\n    };\n    return dotProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n  };\n  /* Get the x coordinate where the given line (defined by a point and vector)\n   * crosses the horizontal line with the given y coordiante.\n   * In the case of parrallel lines (including overlapping ones) returns null. */\n\n  var horizontalIntersection = function horizontalIntersection(pt, v, y) {\n    if (v.y === 0) return null;\n    return {\n      x: pt.x + v.x / v.y * (y - pt.y),\n      y: y\n    };\n  };\n  /* Get the y coordinate where the given line (defined by a point and vector)\n   * crosses the vertical line with the given x coordiante.\n   * In the case of parrallel lines (including overlapping ones) returns null. */\n\n  var verticalIntersection = function verticalIntersection(pt, v, x) {\n    if (v.x === 0) return null;\n    return {\n      x: x,\n      y: pt.y + v.y / v.x * (x - pt.x)\n    };\n  };\n  /* Get the intersection of two lines, each defined by a base point and a vector.\n   * In the case of parrallel lines (including overlapping ones) returns null. */\n\n  var intersection = function intersection(pt1, v1, pt2, v2) {\n    // take some shortcuts for vertical and horizontal lines\n    // this also ensures we don't calculate an intersection and then discover\n    // it's actually outside the bounding box of the line\n    if (v1.x === 0) return verticalIntersection(pt2, v2, pt1.x);\n    if (v2.x === 0) return verticalIntersection(pt1, v1, pt2.x);\n    if (v1.y === 0) return horizontalIntersection(pt2, v2, pt1.y);\n    if (v2.y === 0) return horizontalIntersection(pt1, v1, pt2.y); // General case for non-overlapping segments.\n    // This algorithm is based on Schneider and Eberly.\n    // http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf - pg 244\n\n    var kross = crossProduct(v1, v2);\n    if (kross == 0) return null;\n    var ve = {\n      x: pt2.x - pt1.x,\n      y: pt2.y - pt1.y\n    };\n    var d1 = crossProduct(ve, v1) / kross;\n    var d2 = crossProduct(ve, v2) / kross; // take the average of the two calculations to minimize rounding error\n\n    var x1 = pt1.x + d2 * v1.x,\n        x2 = pt2.x + d1 * v2.x;\n    var y1 = pt1.y + d2 * v1.y,\n        y2 = pt2.y + d1 * v2.y;\n    var x = (x1 + x2) / 2;\n    var y = (y1 + y2) / 2;\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  var SweepEvent = /*#__PURE__*/function () {\n    _createClass(SweepEvent, null, [{\n      key: \"compare\",\n      // for ordering sweep events in the sweep event queue\n      value: function compare(a, b) {\n        // favor event with a point that the sweep line hits first\n        var ptCmp = SweepEvent.comparePoints(a.point, b.point);\n        if (ptCmp !== 0) return ptCmp; // the points are the same, so link them if needed\n\n        if (a.point !== b.point) a.link(b); // favor right events over left\n\n        if (a.isLeft !== b.isLeft) return a.isLeft ? 1 : -1; // we have two matching left or right endpoints\n        // ordering of this case is the same as for their segments\n\n        return Segment.compare(a.segment, b.segment);\n      } // for ordering points in sweep line order\n\n    }, {\n      key: \"comparePoints\",\n      value: function comparePoints(aPt, bPt) {\n        if (aPt.x < bPt.x) return -1;\n        if (aPt.x > bPt.x) return 1;\n        if (aPt.y < bPt.y) return -1;\n        if (aPt.y > bPt.y) return 1;\n        return 0;\n      } // Warning: 'point' input will be modified and re-used (for performance)\n\n    }]);\n\n    function SweepEvent(point, isLeft) {\n      _classCallCheck(this, SweepEvent);\n\n      if (point.events === undefined) point.events = [this];else point.events.push(this);\n      this.point = point;\n      this.isLeft = isLeft; // this.segment, this.otherSE set by factory\n    }\n\n    _createClass(SweepEvent, [{\n      key: \"link\",\n      value: function link(other) {\n        if (other.point === this.point) {\n          throw new Error('Tried to link already linked events');\n        }\n\n        var otherEvents = other.point.events;\n\n        for (var i = 0, iMax = otherEvents.length; i < iMax; i++) {\n          var evt = otherEvents[i];\n          this.point.events.push(evt);\n          evt.point = this.point;\n        }\n\n        this.checkForConsuming();\n      }\n      /* Do a pass over our linked events and check to see if any pair\n       * of segments match, and should be consumed. */\n\n    }, {\n      key: \"checkForConsuming\",\n      value: function checkForConsuming() {\n        // FIXME: The loops in this method run O(n^2) => no good.\n        //        Maintain little ordered sweep event trees?\n        //        Can we maintaining an ordering that avoids the need\n        //        for the re-sorting with getLeftmostComparator in geom-out?\n        // Compare each pair of events to see if other events also match\n        var numEvents = this.point.events.length;\n\n        for (var i = 0; i < numEvents; i++) {\n          var evt1 = this.point.events[i];\n          if (evt1.segment.consumedBy !== undefined) continue;\n\n          for (var j = i + 1; j < numEvents; j++) {\n            var evt2 = this.point.events[j];\n            if (evt2.consumedBy !== undefined) continue;\n            if (evt1.otherSE.point.events !== evt2.otherSE.point.events) continue;\n            evt1.segment.consume(evt2.segment);\n          }\n        }\n      }\n    }, {\n      key: \"getAvailableLinkedEvents\",\n      value: function getAvailableLinkedEvents() {\n        // point.events is always of length 2 or greater\n        var events = [];\n\n        for (var i = 0, iMax = this.point.events.length; i < iMax; i++) {\n          var evt = this.point.events[i];\n\n          if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n            events.push(evt);\n          }\n        }\n\n        return events;\n      }\n      /**\n       * Returns a comparator function for sorting linked events that will\n       * favor the event that will give us the smallest left-side angle.\n       * All ring construction starts as low as possible heading to the right,\n       * so by always turning left as sharp as possible we'll get polygons\n       * without uncessary loops & holes.\n       *\n       * The comparator function has a compute cache such that it avoids\n       * re-computing already-computed values.\n       */\n\n    }, {\n      key: \"getLeftmostComparator\",\n      value: function getLeftmostComparator(baseEvent) {\n        var _this = this;\n\n        var cache = new Map();\n\n        var fillCache = function fillCache(linkedEvent) {\n          var nextEvent = linkedEvent.otherSE;\n          cache.set(linkedEvent, {\n            sine: sineOfAngle(_this.point, baseEvent.point, nextEvent.point),\n            cosine: cosineOfAngle(_this.point, baseEvent.point, nextEvent.point)\n          });\n        };\n\n        return function (a, b) {\n          if (!cache.has(a)) fillCache(a);\n          if (!cache.has(b)) fillCache(b);\n\n          var _cache$get = cache.get(a),\n              asine = _cache$get.sine,\n              acosine = _cache$get.cosine;\n\n          var _cache$get2 = cache.get(b),\n              bsine = _cache$get2.sine,\n              bcosine = _cache$get2.cosine; // both on or above x-axis\n\n\n          if (asine >= 0 && bsine >= 0) {\n            if (acosine < bcosine) return 1;\n            if (acosine > bcosine) return -1;\n            return 0;\n          } // both below x-axis\n\n\n          if (asine < 0 && bsine < 0) {\n            if (acosine < bcosine) return -1;\n            if (acosine > bcosine) return 1;\n            return 0;\n          } // one above x-axis, one below\n\n\n          if (bsine < asine) return -1;\n          if (bsine > asine) return 1;\n          return 0;\n        };\n      }\n    }]);\n\n    return SweepEvent;\n  }();\n\n  // segments and sweep events when all else is identical\n\n  var segmentId = 0;\n\n  var Segment = /*#__PURE__*/function () {\n    _createClass(Segment, null, [{\n      key: \"compare\",\n\n      /* This compare() function is for ordering segments in the sweep\n       * line tree, and does so according to the following criteria:\n       *\n       * Consider the vertical line that lies an infinestimal step to the\n       * right of the right-more of the two left endpoints of the input\n       * segments. Imagine slowly moving a point up from negative infinity\n       * in the increasing y direction. Which of the two segments will that\n       * point intersect first? That segment comes 'before' the other one.\n       *\n       * If neither segment would be intersected by such a line, (if one\n       * or more of the segments are vertical) then the line to be considered\n       * is directly on the right-more of the two left inputs.\n       */\n      value: function compare(a, b) {\n        var alx = a.leftSE.point.x;\n        var blx = b.leftSE.point.x;\n        var arx = a.rightSE.point.x;\n        var brx = b.rightSE.point.x; // check if they're even in the same vertical plane\n\n        if (brx < alx) return 1;\n        if (arx < blx) return -1;\n        var aly = a.leftSE.point.y;\n        var bly = b.leftSE.point.y;\n        var ary = a.rightSE.point.y;\n        var bry = b.rightSE.point.y; // is left endpoint of segment B the right-more?\n\n        if (alx < blx) {\n          // are the two segments in the same horizontal plane?\n          if (bly < aly && bly < ary) return 1;\n          if (bly > aly && bly > ary) return -1; // is the B left endpoint colinear to segment A?\n\n          var aCmpBLeft = a.comparePoint(b.leftSE.point);\n          if (aCmpBLeft < 0) return 1;\n          if (aCmpBLeft > 0) return -1; // is the A right endpoint colinear to segment B ?\n\n          var bCmpARight = b.comparePoint(a.rightSE.point);\n          if (bCmpARight !== 0) return bCmpARight; // colinear segments, consider the one with left-more\n          // left endpoint to be first (arbitrary?)\n\n          return -1;\n        } // is left endpoint of segment A the right-more?\n\n\n        if (alx > blx) {\n          if (aly < bly && aly < bry) return -1;\n          if (aly > bly && aly > bry) return 1; // is the A left endpoint colinear to segment B?\n\n          var bCmpALeft = b.comparePoint(a.leftSE.point);\n          if (bCmpALeft !== 0) return bCmpALeft; // is the B right endpoint colinear to segment A?\n\n          var aCmpBRight = a.comparePoint(b.rightSE.point);\n          if (aCmpBRight < 0) return 1;\n          if (aCmpBRight > 0) return -1; // colinear segments, consider the one with left-more\n          // left endpoint to be first (arbitrary?)\n\n          return 1;\n        } // if we get here, the two left endpoints are in the same\n        // vertical plane, ie alx === blx\n        // consider the lower left-endpoint to come first\n\n\n        if (aly < bly) return -1;\n        if (aly > bly) return 1; // left endpoints are identical\n        // check for colinearity by using the left-more right endpoint\n        // is the A right endpoint more left-more?\n\n        if (arx < brx) {\n          var _bCmpARight = b.comparePoint(a.rightSE.point);\n\n          if (_bCmpARight !== 0) return _bCmpARight;\n        } // is the B right endpoint more left-more?\n\n\n        if (arx > brx) {\n          var _aCmpBRight = a.comparePoint(b.rightSE.point);\n\n          if (_aCmpBRight < 0) return 1;\n          if (_aCmpBRight > 0) return -1;\n        }\n\n        if (arx !== brx) {\n          // are these two [almost] vertical segments with opposite orientation?\n          // if so, the one with the lower right endpoint comes first\n          var ay = ary - aly;\n          var ax = arx - alx;\n          var by = bry - bly;\n          var bx = brx - blx;\n          if (ay > ax && by < bx) return 1;\n          if (ay < ax && by > bx) return -1;\n        } // we have colinear segments with matching orientation\n        // consider the one with more left-more right endpoint to be first\n\n\n        if (arx > brx) return 1;\n        if (arx < brx) return -1; // if we get here, two two right endpoints are in the same\n        // vertical plane, ie arx === brx\n        // consider the lower right-endpoint to come first\n\n        if (ary < bry) return -1;\n        if (ary > bry) return 1; // right endpoints identical as well, so the segments are idential\n        // fall back on creation order as consistent tie-breaker\n\n        if (a.id < b.id) return -1;\n        if (a.id > b.id) return 1; // identical segment, ie a === b\n\n        return 0;\n      }\n      /* Warning: a reference to ringWindings input will be stored,\n       *  and possibly will be later modified */\n\n    }]);\n\n    function Segment(leftSE, rightSE, rings, windings) {\n      _classCallCheck(this, Segment);\n\n      this.id = ++segmentId;\n      this.leftSE = leftSE;\n      leftSE.segment = this;\n      leftSE.otherSE = rightSE;\n      this.rightSE = rightSE;\n      rightSE.segment = this;\n      rightSE.otherSE = leftSE;\n      this.rings = rings;\n      this.windings = windings; // left unset for performance, set later in algorithm\n      // this.ringOut, this.consumedBy, this.prev\n    }\n\n    _createClass(Segment, [{\n      key: \"replaceRightSE\",\n\n      /* When a segment is split, the rightSE is replaced with a new sweep event */\n      value: function replaceRightSE(newRightSE) {\n        this.rightSE = newRightSE;\n        this.rightSE.segment = this;\n        this.rightSE.otherSE = this.leftSE;\n        this.leftSE.otherSE = this.rightSE;\n      }\n    }, {\n      key: \"bbox\",\n      value: function bbox() {\n        var y1 = this.leftSE.point.y;\n        var y2 = this.rightSE.point.y;\n        return {\n          ll: {\n            x: this.leftSE.point.x,\n            y: y1 < y2 ? y1 : y2\n          },\n          ur: {\n            x: this.rightSE.point.x,\n            y: y1 > y2 ? y1 : y2\n          }\n        };\n      }\n      /* A vector from the left point to the right */\n\n    }, {\n      key: \"vector\",\n      value: function vector() {\n        return {\n          x: this.rightSE.point.x - this.leftSE.point.x,\n          y: this.rightSE.point.y - this.leftSE.point.y\n        };\n      }\n    }, {\n      key: \"isAnEndpoint\",\n      value: function isAnEndpoint(pt) {\n        return pt.x === this.leftSE.point.x && pt.y === this.leftSE.point.y || pt.x === this.rightSE.point.x && pt.y === this.rightSE.point.y;\n      }\n      /* Compare this segment with a point.\n       *\n       * A point P is considered to be colinear to a segment if there\n       * exists a distance D such that if we travel along the segment\n       * from one * endpoint towards the other a distance D, we find\n       * ourselves at point P.\n       *\n       * Return value indicates:\n       *\n       *   1: point lies above the segment (to the left of vertical)\n       *   0: point is colinear to segment\n       *  -1: point lies below the segment (to the right of vertical)\n       */\n\n    }, {\n      key: \"comparePoint\",\n      value: function comparePoint(point) {\n        if (this.isAnEndpoint(point)) return 0;\n        var lPt = this.leftSE.point;\n        var rPt = this.rightSE.point;\n        var v = this.vector(); // Exactly vertical segments.\n\n        if (lPt.x === rPt.x) {\n          if (point.x === lPt.x) return 0;\n          return point.x < lPt.x ? 1 : -1;\n        } // Nearly vertical segments with an intersection.\n        // Check to see where a point on the line with matching Y coordinate is.\n\n\n        var yDist = (point.y - lPt.y) / v.y;\n        var xFromYDist = lPt.x + yDist * v.x;\n        if (point.x === xFromYDist) return 0; // General case.\n        // Check to see where a point on the line with matching X coordinate is.\n\n        var xDist = (point.x - lPt.x) / v.x;\n        var yFromXDist = lPt.y + xDist * v.y;\n        if (point.y === yFromXDist) return 0;\n        return point.y < yFromXDist ? -1 : 1;\n      }\n      /**\n       * Given another segment, returns the first non-trivial intersection\n       * between the two segments (in terms of sweep line ordering), if it exists.\n       *\n       * A 'non-trivial' intersection is one that will cause one or both of the\n       * segments to be split(). As such, 'trivial' vs. 'non-trivial' intersection:\n       *\n       *   * endpoint of segA with endpoint of segB --> trivial\n       *   * endpoint of segA with point along segB --> non-trivial\n       *   * endpoint of segB with point along segA --> non-trivial\n       *   * point along segA with point along segB --> non-trivial\n       *\n       * If no non-trivial intersection exists, return null\n       * Else, return null.\n       */\n\n    }, {\n      key: \"getIntersection\",\n      value: function getIntersection(other) {\n        // If bboxes don't overlap, there can't be any intersections\n        var tBbox = this.bbox();\n        var oBbox = other.bbox();\n        var bboxOverlap = getBboxOverlap(tBbox, oBbox);\n        if (bboxOverlap === null) return null; // We first check to see if the endpoints can be considered intersections.\n        // This will 'snap' intersections to endpoints if possible, and will\n        // handle cases of colinearity.\n\n        var tlp = this.leftSE.point;\n        var trp = this.rightSE.point;\n        var olp = other.leftSE.point;\n        var orp = other.rightSE.point; // does each endpoint touch the other segment?\n        // note that we restrict the 'touching' definition to only allow segments\n        // to touch endpoints that lie forward from where we are in the sweep line pass\n\n        var touchesOtherLSE = isInBbox(tBbox, olp) && this.comparePoint(olp) === 0;\n        var touchesThisLSE = isInBbox(oBbox, tlp) && other.comparePoint(tlp) === 0;\n        var touchesOtherRSE = isInBbox(tBbox, orp) && this.comparePoint(orp) === 0;\n        var touchesThisRSE = isInBbox(oBbox, trp) && other.comparePoint(trp) === 0; // do left endpoints match?\n\n        if (touchesThisLSE && touchesOtherLSE) {\n          // these two cases are for colinear segments with matching left\n          // endpoints, and one segment being longer than the other\n          if (touchesThisRSE && !touchesOtherRSE) return trp;\n          if (!touchesThisRSE && touchesOtherRSE) return orp; // either the two segments match exactly (two trival intersections)\n          // or just on their left endpoint (one trivial intersection\n\n          return null;\n        } // does this left endpoint matches (other doesn't)\n\n\n        if (touchesThisLSE) {\n          // check for segments that just intersect on opposing endpoints\n          if (touchesOtherRSE) {\n            if (tlp.x === orp.x && tlp.y === orp.y) return null;\n          } // t-intersection on left endpoint\n\n\n          return tlp;\n        } // does other left endpoint matches (this doesn't)\n\n\n        if (touchesOtherLSE) {\n          // check for segments that just intersect on opposing endpoints\n          if (touchesThisRSE) {\n            if (trp.x === olp.x && trp.y === olp.y) return null;\n          } // t-intersection on left endpoint\n\n\n          return olp;\n        } // trivial intersection on right endpoints\n\n\n        if (touchesThisRSE && touchesOtherRSE) return null; // t-intersections on just one right endpoint\n\n        if (touchesThisRSE) return trp;\n        if (touchesOtherRSE) return orp; // None of our endpoints intersect. Look for a general intersection between\n        // infinite lines laid over the segments\n\n        var pt = intersection(tlp, this.vector(), olp, other.vector()); // are the segments parrallel? Note that if they were colinear with overlap,\n        // they would have an endpoint intersection and that case was already handled above\n\n        if (pt === null) return null; // is the intersection found between the lines not on the segments?\n\n        if (!isInBbox(bboxOverlap, pt)) return null; // round the the computed point if needed\n\n        return rounder.round(pt.x, pt.y);\n      }\n      /**\n       * Split the given segment into multiple segments on the given points.\n       *  * Each existing segment will retain its leftSE and a new rightSE will be\n       *    generated for it.\n       *  * A new segment will be generated which will adopt the original segment's\n       *    rightSE, and a new leftSE will be generated for it.\n       *  * If there are more than two points given to split on, new segments\n       *    in the middle will be generated with new leftSE and rightSE's.\n       *  * An array of the newly generated SweepEvents will be returned.\n       *\n       * Warning: input array of points is modified\n       */\n\n    }, {\n      key: \"split\",\n      value: function split(point) {\n        var newEvents = [];\n        var alreadyLinked = point.events !== undefined;\n        var newLeftSE = new SweepEvent(point, true);\n        var newRightSE = new SweepEvent(point, false);\n        var oldRightSE = this.rightSE;\n        this.replaceRightSE(newRightSE);\n        newEvents.push(newRightSE);\n        newEvents.push(newLeftSE);\n        var newSeg = new Segment(newLeftSE, oldRightSE, this.rings.slice(), this.windings.slice()); // when splitting a nearly vertical downward-facing segment,\n        // sometimes one of the resulting new segments is vertical, in which\n        // case its left and right events may need to be swapped\n\n        if (SweepEvent.comparePoints(newSeg.leftSE.point, newSeg.rightSE.point) > 0) {\n          newSeg.swapEvents();\n        }\n\n        if (SweepEvent.comparePoints(this.leftSE.point, this.rightSE.point) > 0) {\n          this.swapEvents();\n        } // in the point we just used to create new sweep events with was already\n        // linked to other events, we need to check if either of the affected\n        // segments should be consumed\n\n\n        if (alreadyLinked) {\n          newLeftSE.checkForConsuming();\n          newRightSE.checkForConsuming();\n        }\n\n        return newEvents;\n      }\n      /* Swap which event is left and right */\n\n    }, {\n      key: \"swapEvents\",\n      value: function swapEvents() {\n        var tmpEvt = this.rightSE;\n        this.rightSE = this.leftSE;\n        this.leftSE = tmpEvt;\n        this.leftSE.isLeft = true;\n        this.rightSE.isLeft = false;\n\n        for (var i = 0, iMax = this.windings.length; i < iMax; i++) {\n          this.windings[i] *= -1;\n        }\n      }\n      /* Consume another segment. We take their rings under our wing\n       * and mark them as consumed. Use for perfectly overlapping segments */\n\n    }, {\n      key: \"consume\",\n      value: function consume(other) {\n        var consumer = this;\n        var consumee = other;\n\n        while (consumer.consumedBy) {\n          consumer = consumer.consumedBy;\n        }\n\n        while (consumee.consumedBy) {\n          consumee = consumee.consumedBy;\n        }\n\n        var cmp = Segment.compare(consumer, consumee);\n        if (cmp === 0) return; // already consumed\n        // the winner of the consumption is the earlier segment\n        // according to sweep line ordering\n\n        if (cmp > 0) {\n          var tmp = consumer;\n          consumer = consumee;\n          consumee = tmp;\n        } // make sure a segment doesn't consume it's prev\n\n\n        if (consumer.prev === consumee) {\n          var _tmp = consumer;\n          consumer = consumee;\n          consumee = _tmp;\n        }\n\n        for (var i = 0, iMax = consumee.rings.length; i < iMax; i++) {\n          var ring = consumee.rings[i];\n          var winding = consumee.windings[i];\n          var index = consumer.rings.indexOf(ring);\n\n          if (index === -1) {\n            consumer.rings.push(ring);\n            consumer.windings.push(winding);\n          } else consumer.windings[index] += winding;\n        }\n\n        consumee.rings = null;\n        consumee.windings = null;\n        consumee.consumedBy = consumer; // mark sweep events consumed as to maintain ordering in sweep event queue\n\n        consumee.leftSE.consumedBy = consumer.leftSE;\n        consumee.rightSE.consumedBy = consumer.rightSE;\n      }\n      /* The first segment previous segment chain that is in the result */\n\n    }, {\n      key: \"prevInResult\",\n      value: function prevInResult() {\n        if (this._prevInResult !== undefined) return this._prevInResult;\n        if (!this.prev) this._prevInResult = null;else if (this.prev.isInResult()) this._prevInResult = this.prev;else this._prevInResult = this.prev.prevInResult();\n        return this._prevInResult;\n      }\n    }, {\n      key: \"beforeState\",\n      value: function beforeState() {\n        if (this._beforeState !== undefined) return this._beforeState;\n        if (!this.prev) this._beforeState = {\n          rings: [],\n          windings: [],\n          multiPolys: []\n        };else {\n          var seg = this.prev.consumedBy || this.prev;\n          this._beforeState = seg.afterState();\n        }\n        return this._beforeState;\n      }\n    }, {\n      key: \"afterState\",\n      value: function afterState() {\n        if (this._afterState !== undefined) return this._afterState;\n        var beforeState = this.beforeState();\n        this._afterState = {\n          rings: beforeState.rings.slice(0),\n          windings: beforeState.windings.slice(0),\n          multiPolys: []\n        };\n        var ringsAfter = this._afterState.rings;\n        var windingsAfter = this._afterState.windings;\n        var mpsAfter = this._afterState.multiPolys; // calculate ringsAfter, windingsAfter\n\n        for (var i = 0, iMax = this.rings.length; i < iMax; i++) {\n          var ring = this.rings[i];\n          var winding = this.windings[i];\n          var index = ringsAfter.indexOf(ring);\n\n          if (index === -1) {\n            ringsAfter.push(ring);\n            windingsAfter.push(winding);\n          } else windingsAfter[index] += winding;\n        } // calcualte polysAfter\n\n\n        var polysAfter = [];\n        var polysExclude = [];\n\n        for (var _i = 0, _iMax = ringsAfter.length; _i < _iMax; _i++) {\n          if (windingsAfter[_i] === 0) continue; // non-zero rule\n\n          var _ring = ringsAfter[_i];\n          var poly = _ring.poly;\n          if (polysExclude.indexOf(poly) !== -1) continue;\n          if (_ring.isExterior) polysAfter.push(poly);else {\n            if (polysExclude.indexOf(poly) === -1) polysExclude.push(poly);\n\n            var _index = polysAfter.indexOf(_ring.poly);\n\n            if (_index !== -1) polysAfter.splice(_index, 1);\n          }\n        } // calculate multiPolysAfter\n\n\n        for (var _i2 = 0, _iMax2 = polysAfter.length; _i2 < _iMax2; _i2++) {\n          var mp = polysAfter[_i2].multiPoly;\n          if (mpsAfter.indexOf(mp) === -1) mpsAfter.push(mp);\n        }\n\n        return this._afterState;\n      }\n      /* Is this segment part of the final result? */\n\n    }, {\n      key: \"isInResult\",\n      value: function isInResult() {\n        // if we've been consumed, we're not in the result\n        if (this.consumedBy) return false;\n        if (this._isInResult !== undefined) return this._isInResult;\n        var mpsBefore = this.beforeState().multiPolys;\n        var mpsAfter = this.afterState().multiPolys;\n\n        switch (operation.type) {\n          case 'union':\n            {\n              // UNION - included iff:\n              //  * On one side of us there is 0 poly interiors AND\n              //  * On the other side there is 1 or more.\n              var noBefores = mpsBefore.length === 0;\n              var noAfters = mpsAfter.length === 0;\n              this._isInResult = noBefores !== noAfters;\n              break;\n            }\n\n          case 'intersection':\n            {\n              // INTERSECTION - included iff:\n              //  * on one side of us all multipolys are rep. with poly interiors AND\n              //  * on the other side of us, not all multipolys are repsented\n              //    with poly interiors\n              var least;\n              var most;\n\n              if (mpsBefore.length < mpsAfter.length) {\n                least = mpsBefore.length;\n                most = mpsAfter.length;\n              } else {\n                least = mpsAfter.length;\n                most = mpsBefore.length;\n              }\n\n              this._isInResult = most === operation.numMultiPolys && least < most;\n              break;\n            }\n\n          case 'xor':\n            {\n              // XOR - included iff:\n              //  * the difference between the number of multipolys represented\n              //    with poly interiors on our two sides is an odd number\n              var diff = Math.abs(mpsBefore.length - mpsAfter.length);\n              this._isInResult = diff % 2 === 1;\n              break;\n            }\n\n          case 'difference':\n            {\n              // DIFFERENCE included iff:\n              //  * on exactly one side, we have just the subject\n              var isJustSubject = function isJustSubject(mps) {\n                return mps.length === 1 && mps[0].isSubject;\n              };\n\n              this._isInResult = isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n              break;\n            }\n\n          default:\n            throw new Error(\"Unrecognized operation type found \".concat(operation.type));\n        }\n\n        return this._isInResult;\n      }\n    }], [{\n      key: \"fromRing\",\n      value: function fromRing(pt1, pt2, ring) {\n        var leftPt, rightPt, winding; // ordering the two points according to sweep line ordering\n\n        var cmpPts = SweepEvent.comparePoints(pt1, pt2);\n\n        if (cmpPts < 0) {\n          leftPt = pt1;\n          rightPt = pt2;\n          winding = 1;\n        } else if (cmpPts > 0) {\n          leftPt = pt2;\n          rightPt = pt1;\n          winding = -1;\n        } else throw new Error(\"Tried to create degenerate segment at [\".concat(pt1.x, \", \").concat(pt1.y, \"]\"));\n\n        var leftSE = new SweepEvent(leftPt, true);\n        var rightSE = new SweepEvent(rightPt, false);\n        return new Segment(leftSE, rightSE, [ring], [winding]);\n      }\n    }]);\n\n    return Segment;\n  }();\n\n  var RingIn = /*#__PURE__*/function () {\n    function RingIn(geomRing, poly, isExterior) {\n      _classCallCheck(this, RingIn);\n\n      if (!Array.isArray(geomRing) || geomRing.length === 0) {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      this.poly = poly;\n      this.isExterior = isExterior;\n      this.segments = [];\n\n      if (typeof geomRing[0][0] !== 'number' || typeof geomRing[0][1] !== 'number') {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      var firstPoint = rounder.round(geomRing[0][0], geomRing[0][1]);\n      this.bbox = {\n        ll: {\n          x: firstPoint.x,\n          y: firstPoint.y\n        },\n        ur: {\n          x: firstPoint.x,\n          y: firstPoint.y\n        }\n      };\n      var prevPoint = firstPoint;\n\n      for (var i = 1, iMax = geomRing.length; i < iMax; i++) {\n        if (typeof geomRing[i][0] !== 'number' || typeof geomRing[i][1] !== 'number') {\n          throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n        }\n\n        var point = rounder.round(geomRing[i][0], geomRing[i][1]); // skip repeated points\n\n        if (point.x === prevPoint.x && point.y === prevPoint.y) continue;\n        this.segments.push(Segment.fromRing(prevPoint, point, this));\n        if (point.x < this.bbox.ll.x) this.bbox.ll.x = point.x;\n        if (point.y < this.bbox.ll.y) this.bbox.ll.y = point.y;\n        if (point.x > this.bbox.ur.x) this.bbox.ur.x = point.x;\n        if (point.y > this.bbox.ur.y) this.bbox.ur.y = point.y;\n        prevPoint = point;\n      } // add segment from last to first if last is not the same as first\n\n\n      if (firstPoint.x !== prevPoint.x || firstPoint.y !== prevPoint.y) {\n        this.segments.push(Segment.fromRing(prevPoint, firstPoint, this));\n      }\n    }\n\n    _createClass(RingIn, [{\n      key: \"getSweepEvents\",\n      value: function getSweepEvents() {\n        var sweepEvents = [];\n\n        for (var i = 0, iMax = this.segments.length; i < iMax; i++) {\n          var segment = this.segments[i];\n          sweepEvents.push(segment.leftSE);\n          sweepEvents.push(segment.rightSE);\n        }\n\n        return sweepEvents;\n      }\n    }]);\n\n    return RingIn;\n  }();\n  var PolyIn = /*#__PURE__*/function () {\n    function PolyIn(geomPoly, multiPoly) {\n      _classCallCheck(this, PolyIn);\n\n      if (!Array.isArray(geomPoly)) {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      this.exteriorRing = new RingIn(geomPoly[0], this, true); // copy by value\n\n      this.bbox = {\n        ll: {\n          x: this.exteriorRing.bbox.ll.x,\n          y: this.exteriorRing.bbox.ll.y\n        },\n        ur: {\n          x: this.exteriorRing.bbox.ur.x,\n          y: this.exteriorRing.bbox.ur.y\n        }\n      };\n      this.interiorRings = [];\n\n      for (var i = 1, iMax = geomPoly.length; i < iMax; i++) {\n        var ring = new RingIn(geomPoly[i], this, false);\n        if (ring.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = ring.bbox.ll.x;\n        if (ring.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = ring.bbox.ll.y;\n        if (ring.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = ring.bbox.ur.x;\n        if (ring.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = ring.bbox.ur.y;\n        this.interiorRings.push(ring);\n      }\n\n      this.multiPoly = multiPoly;\n    }\n\n    _createClass(PolyIn, [{\n      key: \"getSweepEvents\",\n      value: function getSweepEvents() {\n        var sweepEvents = this.exteriorRing.getSweepEvents();\n\n        for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n          var ringSweepEvents = this.interiorRings[i].getSweepEvents();\n\n          for (var j = 0, jMax = ringSweepEvents.length; j < jMax; j++) {\n            sweepEvents.push(ringSweepEvents[j]);\n          }\n        }\n\n        return sweepEvents;\n      }\n    }]);\n\n    return PolyIn;\n  }();\n  var MultiPolyIn = /*#__PURE__*/function () {\n    function MultiPolyIn(geom, isSubject) {\n      _classCallCheck(this, MultiPolyIn);\n\n      if (!Array.isArray(geom)) {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      try {\n        // if the input looks like a polygon, convert it to a multipolygon\n        if (typeof geom[0][0][0] === 'number') geom = [geom];\n      } catch (ex) {// The input is either malformed or has empty arrays.\n        // In either case, it will be handled later on.\n      }\n\n      this.polys = [];\n      this.bbox = {\n        ll: {\n          x: Number.POSITIVE_INFINITY,\n          y: Number.POSITIVE_INFINITY\n        },\n        ur: {\n          x: Number.NEGATIVE_INFINITY,\n          y: Number.NEGATIVE_INFINITY\n        }\n      };\n\n      for (var i = 0, iMax = geom.length; i < iMax; i++) {\n        var poly = new PolyIn(geom[i], this);\n        if (poly.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = poly.bbox.ll.x;\n        if (poly.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = poly.bbox.ll.y;\n        if (poly.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = poly.bbox.ur.x;\n        if (poly.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = poly.bbox.ur.y;\n        this.polys.push(poly);\n      }\n\n      this.isSubject = isSubject;\n    }\n\n    _createClass(MultiPolyIn, [{\n      key: \"getSweepEvents\",\n      value: function getSweepEvents() {\n        var sweepEvents = [];\n\n        for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n          var polySweepEvents = this.polys[i].getSweepEvents();\n\n          for (var j = 0, jMax = polySweepEvents.length; j < jMax; j++) {\n            sweepEvents.push(polySweepEvents[j]);\n          }\n        }\n\n        return sweepEvents;\n      }\n    }]);\n\n    return MultiPolyIn;\n  }();\n\n  var RingOut = /*#__PURE__*/function () {\n    _createClass(RingOut, null, [{\n      key: \"factory\",\n\n      /* Given the segments from the sweep line pass, compute & return a series\n       * of closed rings from all the segments marked to be part of the result */\n      value: function factory(allSegments) {\n        var ringsOut = [];\n\n        for (var i = 0, iMax = allSegments.length; i < iMax; i++) {\n          var segment = allSegments[i];\n          if (!segment.isInResult() || segment.ringOut) continue;\n          var prevEvent = null;\n          var event = segment.leftSE;\n          var nextEvent = segment.rightSE;\n          var events = [event];\n          var startingPoint = event.point;\n          var intersectionLEs = [];\n          /* Walk the chain of linked events to form a closed ring */\n\n          while (true) {\n            prevEvent = event;\n            event = nextEvent;\n            events.push(event);\n            /* Is the ring complete? */\n\n            if (event.point === startingPoint) break;\n\n            while (true) {\n              var availableLEs = event.getAvailableLinkedEvents();\n              /* Did we hit a dead end? This shouldn't happen. Indicates some earlier\n               * part of the algorithm malfunctioned... please file a bug report. */\n\n              if (availableLEs.length === 0) {\n                var firstPt = events[0].point;\n                var lastPt = events[events.length - 1].point;\n                throw new Error(\"Unable to complete output ring starting at [\".concat(firstPt.x, \",\") + \" \".concat(firstPt.y, \"]. Last matching segment found ends at\") + \" [\".concat(lastPt.x, \", \").concat(lastPt.y, \"].\"));\n              }\n              /* Only one way to go, so cotinue on the path */\n\n\n              if (availableLEs.length === 1) {\n                nextEvent = availableLEs[0].otherSE;\n                break;\n              }\n              /* We must have an intersection. Check for a completed loop */\n\n\n              var indexLE = null;\n\n              for (var j = 0, jMax = intersectionLEs.length; j < jMax; j++) {\n                if (intersectionLEs[j].point === event.point) {\n                  indexLE = j;\n                  break;\n                }\n              }\n              /* Found a completed loop. Cut that off and make a ring */\n\n\n              if (indexLE !== null) {\n                var intersectionLE = intersectionLEs.splice(indexLE)[0];\n                var ringEvents = events.splice(intersectionLE.index);\n                ringEvents.unshift(ringEvents[0].otherSE);\n                ringsOut.push(new RingOut(ringEvents.reverse()));\n                continue;\n              }\n              /* register the intersection */\n\n\n              intersectionLEs.push({\n                index: events.length,\n                point: event.point\n              });\n              /* Choose the left-most option to continue the walk */\n\n              var comparator = event.getLeftmostComparator(prevEvent);\n              nextEvent = availableLEs.sort(comparator)[0].otherSE;\n              break;\n            }\n          }\n\n          ringsOut.push(new RingOut(events));\n        }\n\n        return ringsOut;\n      }\n    }]);\n\n    function RingOut(events) {\n      _classCallCheck(this, RingOut);\n\n      this.events = events;\n\n      for (var i = 0, iMax = events.length; i < iMax; i++) {\n        events[i].segment.ringOut = this;\n      }\n\n      this.poly = null;\n    }\n\n    _createClass(RingOut, [{\n      key: \"getGeom\",\n      value: function getGeom() {\n        // Remove superfluous points (ie extra points along a straight line),\n        var prevPt = this.events[0].point;\n        var points = [prevPt];\n\n        for (var i = 1, iMax = this.events.length - 1; i < iMax; i++) {\n          var _pt = this.events[i].point;\n          var _nextPt = this.events[i + 1].point;\n          if (compareVectorAngles(_pt, prevPt, _nextPt) === 0) continue;\n          points.push(_pt);\n          prevPt = _pt;\n        } // ring was all (within rounding error of angle calc) colinear points\n\n\n        if (points.length === 1) return null; // check if the starting point is necessary\n\n        var pt = points[0];\n        var nextPt = points[1];\n        if (compareVectorAngles(pt, prevPt, nextPt) === 0) points.shift();\n        points.push(points[0]);\n        var step = this.isExteriorRing() ? 1 : -1;\n        var iStart = this.isExteriorRing() ? 0 : points.length - 1;\n        var iEnd = this.isExteriorRing() ? points.length : -1;\n        var orderedPoints = [];\n\n        for (var _i = iStart; _i != iEnd; _i += step) {\n          orderedPoints.push([points[_i].x, points[_i].y]);\n        }\n\n        return orderedPoints;\n      }\n    }, {\n      key: \"isExteriorRing\",\n      value: function isExteriorRing() {\n        if (this._isExteriorRing === undefined) {\n          var enclosing = this.enclosingRing();\n          this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n        }\n\n        return this._isExteriorRing;\n      }\n    }, {\n      key: \"enclosingRing\",\n      value: function enclosingRing() {\n        if (this._enclosingRing === undefined) {\n          this._enclosingRing = this._calcEnclosingRing();\n        }\n\n        return this._enclosingRing;\n      }\n      /* Returns the ring that encloses this one, if any */\n\n    }, {\n      key: \"_calcEnclosingRing\",\n      value: function _calcEnclosingRing() {\n        // start with the ealier sweep line event so that the prevSeg\n        // chain doesn't lead us inside of a loop of ours\n        var leftMostEvt = this.events[0];\n\n        for (var i = 1, iMax = this.events.length; i < iMax; i++) {\n          var evt = this.events[i];\n          if (SweepEvent.compare(leftMostEvt, evt) > 0) leftMostEvt = evt;\n        }\n\n        var prevSeg = leftMostEvt.segment.prevInResult();\n        var prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n\n        while (true) {\n          // no segment found, thus no ring can enclose us\n          if (!prevSeg) return null; // no segments below prev segment found, thus the ring of the prev\n          // segment must loop back around and enclose us\n\n          if (!prevPrevSeg) return prevSeg.ringOut; // if the two segments are of different rings, the ring of the prev\n          // segment must either loop around us or the ring of the prev prev\n          // seg, which would make us and the ring of the prev peers\n\n          if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n            if (prevPrevSeg.ringOut.enclosingRing() !== prevSeg.ringOut) {\n              return prevSeg.ringOut;\n            } else return prevSeg.ringOut.enclosingRing();\n          } // two segments are from the same ring, so this was a penisula\n          // of that ring. iterate downward, keep searching\n\n\n          prevSeg = prevPrevSeg.prevInResult();\n          prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n        }\n      }\n    }]);\n\n    return RingOut;\n  }();\n  var PolyOut = /*#__PURE__*/function () {\n    function PolyOut(exteriorRing) {\n      _classCallCheck(this, PolyOut);\n\n      this.exteriorRing = exteriorRing;\n      exteriorRing.poly = this;\n      this.interiorRings = [];\n    }\n\n    _createClass(PolyOut, [{\n      key: \"addInterior\",\n      value: function addInterior(ring) {\n        this.interiorRings.push(ring);\n        ring.poly = this;\n      }\n    }, {\n      key: \"getGeom\",\n      value: function getGeom() {\n        var geom = [this.exteriorRing.getGeom()]; // exterior ring was all (within rounding error of angle calc) colinear points\n\n        if (geom[0] === null) return null;\n\n        for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n          var ringGeom = this.interiorRings[i].getGeom(); // interior ring was all (within rounding error of angle calc) colinear points\n\n          if (ringGeom === null) continue;\n          geom.push(ringGeom);\n        }\n\n        return geom;\n      }\n    }]);\n\n    return PolyOut;\n  }();\n  var MultiPolyOut = /*#__PURE__*/function () {\n    function MultiPolyOut(rings) {\n      _classCallCheck(this, MultiPolyOut);\n\n      this.rings = rings;\n      this.polys = this._composePolys(rings);\n    }\n\n    _createClass(MultiPolyOut, [{\n      key: \"getGeom\",\n      value: function getGeom() {\n        var geom = [];\n\n        for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n          var polyGeom = this.polys[i].getGeom(); // exterior ring was all (within rounding error of angle calc) colinear points\n\n          if (polyGeom === null) continue;\n          geom.push(polyGeom);\n        }\n\n        return geom;\n      }\n    }, {\n      key: \"_composePolys\",\n      value: function _composePolys(rings) {\n        var polys = [];\n\n        for (var i = 0, iMax = rings.length; i < iMax; i++) {\n          var ring = rings[i];\n          if (ring.poly) continue;\n          if (ring.isExteriorRing()) polys.push(new PolyOut(ring));else {\n            var enclosingRing = ring.enclosingRing();\n            if (!enclosingRing.poly) polys.push(new PolyOut(enclosingRing));\n            enclosingRing.poly.addInterior(ring);\n          }\n        }\n\n        return polys;\n      }\n    }]);\n\n    return MultiPolyOut;\n  }();\n\n  /**\n   * NOTE:  We must be careful not to change any segments while\n   *        they are in the SplayTree. AFAIK, there's no way to tell\n   *        the tree to rebalance itself - thus before splitting\n   *        a segment that's in the tree, we remove it from the tree,\n   *        do the split, then re-insert it. (Even though splitting a\n   *        segment *shouldn't* change its correct position in the\n   *        sweep line tree, the reality is because of rounding errors,\n   *        it sometimes does.)\n   */\n\n  var SweepLine = /*#__PURE__*/function () {\n    function SweepLine(queue) {\n      var comparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Segment.compare;\n\n      _classCallCheck(this, SweepLine);\n\n      this.queue = queue;\n      this.tree = new Tree(comparator);\n      this.segments = [];\n    }\n\n    _createClass(SweepLine, [{\n      key: \"process\",\n      value: function process(event) {\n        var segment = event.segment;\n        var newEvents = []; // if we've already been consumed by another segment,\n        // clean up our body parts and get out\n\n        if (event.consumedBy) {\n          if (event.isLeft) this.queue.remove(event.otherSE);else this.tree.remove(segment);\n          return newEvents;\n        }\n\n        var node = event.isLeft ? this.tree.insert(segment) : this.tree.find(segment);\n        if (!node) throw new Error(\"Unable to find segment #\".concat(segment.id, \" \") + \"[\".concat(segment.leftSE.point.x, \", \").concat(segment.leftSE.point.y, \"] -> \") + \"[\".concat(segment.rightSE.point.x, \", \").concat(segment.rightSE.point.y, \"] \") + 'in SweepLine tree. Please submit a bug report.');\n        var prevNode = node;\n        var nextNode = node;\n        var prevSeg = undefined;\n        var nextSeg = undefined; // skip consumed segments still in tree\n\n        while (prevSeg === undefined) {\n          prevNode = this.tree.prev(prevNode);\n          if (prevNode === null) prevSeg = null;else if (prevNode.key.consumedBy === undefined) prevSeg = prevNode.key;\n        } // skip consumed segments still in tree\n\n\n        while (nextSeg === undefined) {\n          nextNode = this.tree.next(nextNode);\n          if (nextNode === null) nextSeg = null;else if (nextNode.key.consumedBy === undefined) nextSeg = nextNode.key;\n        }\n\n        if (event.isLeft) {\n          // Check for intersections against the previous segment in the sweep line\n          var prevMySplitter = null;\n\n          if (prevSeg) {\n            var prevInter = prevSeg.getIntersection(segment);\n\n            if (prevInter !== null) {\n              if (!segment.isAnEndpoint(prevInter)) prevMySplitter = prevInter;\n\n              if (!prevSeg.isAnEndpoint(prevInter)) {\n                var newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n\n                for (var i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n                  newEvents.push(newEventsFromSplit[i]);\n                }\n              }\n            }\n          } // Check for intersections against the next segment in the sweep line\n\n\n          var nextMySplitter = null;\n\n          if (nextSeg) {\n            var nextInter = nextSeg.getIntersection(segment);\n\n            if (nextInter !== null) {\n              if (!segment.isAnEndpoint(nextInter)) nextMySplitter = nextInter;\n\n              if (!nextSeg.isAnEndpoint(nextInter)) {\n                var _newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n\n                for (var _i = 0, _iMax = _newEventsFromSplit.length; _i < _iMax; _i++) {\n                  newEvents.push(_newEventsFromSplit[_i]);\n                }\n              }\n            }\n          } // For simplicity, even if we find more than one intersection we only\n          // spilt on the 'earliest' (sweep-line style) of the intersections.\n          // The other intersection will be handled in a future process().\n\n\n          if (prevMySplitter !== null || nextMySplitter !== null) {\n            var mySplitter = null;\n            if (prevMySplitter === null) mySplitter = nextMySplitter;else if (nextMySplitter === null) mySplitter = prevMySplitter;else {\n              var cmpSplitters = SweepEvent.comparePoints(prevMySplitter, nextMySplitter);\n              mySplitter = cmpSplitters <= 0 ? prevMySplitter : nextMySplitter;\n            } // Rounding errors can cause changes in ordering,\n            // so remove afected segments and right sweep events before splitting\n\n            this.queue.remove(segment.rightSE);\n            newEvents.push(segment.rightSE);\n\n            var _newEventsFromSplit2 = segment.split(mySplitter);\n\n            for (var _i2 = 0, _iMax2 = _newEventsFromSplit2.length; _i2 < _iMax2; _i2++) {\n              newEvents.push(_newEventsFromSplit2[_i2]);\n            }\n          }\n\n          if (newEvents.length > 0) {\n            // We found some intersections, so re-do the current event to\n            // make sure sweep line ordering is totally consistent for later\n            // use with the segment 'prev' pointers\n            this.tree.remove(segment);\n            newEvents.push(event);\n          } else {\n            // done with left event\n            this.segments.push(segment);\n            segment.prev = prevSeg;\n          }\n        } else {\n          // event.isRight\n          // since we're about to be removed from the sweep line, check for\n          // intersections between our previous and next segments\n          if (prevSeg && nextSeg) {\n            var inter = prevSeg.getIntersection(nextSeg);\n\n            if (inter !== null) {\n              if (!prevSeg.isAnEndpoint(inter)) {\n                var _newEventsFromSplit3 = this._splitSafely(prevSeg, inter);\n\n                for (var _i3 = 0, _iMax3 = _newEventsFromSplit3.length; _i3 < _iMax3; _i3++) {\n                  newEvents.push(_newEventsFromSplit3[_i3]);\n                }\n              }\n\n              if (!nextSeg.isAnEndpoint(inter)) {\n                var _newEventsFromSplit4 = this._splitSafely(nextSeg, inter);\n\n                for (var _i4 = 0, _iMax4 = _newEventsFromSplit4.length; _i4 < _iMax4; _i4++) {\n                  newEvents.push(_newEventsFromSplit4[_i4]);\n                }\n              }\n            }\n          }\n\n          this.tree.remove(segment);\n        }\n\n        return newEvents;\n      }\n      /* Safely split a segment that is currently in the datastructures\n       * IE - a segment other than the one that is currently being processed. */\n\n    }, {\n      key: \"_splitSafely\",\n      value: function _splitSafely(seg, pt) {\n        // Rounding errors can cause changes in ordering,\n        // so remove afected segments and right sweep events before splitting\n        // removeNode() doesn't work, so have re-find the seg\n        // https://github.com/w8r/splay-tree/pull/5\n        this.tree.remove(seg);\n        var rightSE = seg.rightSE;\n        this.queue.remove(rightSE);\n        var newEvents = seg.split(pt);\n        newEvents.push(rightSE); // splitting can trigger consumption\n\n        if (seg.consumedBy === undefined) this.tree.insert(seg);\n        return newEvents;\n      }\n    }]);\n\n    return SweepLine;\n  }();\n\n  var POLYGON_CLIPPING_MAX_QUEUE_SIZE = typeof process !== 'undefined' && process.env.POLYGON_CLIPPING_MAX_QUEUE_SIZE || 1000000;\n  var POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS = typeof process !== 'undefined' && process.env.POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS || 1000000;\n  var Operation = /*#__PURE__*/function () {\n    function Operation() {\n      _classCallCheck(this, Operation);\n    }\n\n    _createClass(Operation, [{\n      key: \"run\",\n      value: function run(type, geom, moreGeoms) {\n        operation.type = type;\n        rounder.reset();\n        /* Convert inputs to MultiPoly objects */\n\n        var multipolys = [new MultiPolyIn(geom, true)];\n\n        for (var i = 0, iMax = moreGeoms.length; i < iMax; i++) {\n          multipolys.push(new MultiPolyIn(moreGeoms[i], false));\n        }\n\n        operation.numMultiPolys = multipolys.length;\n        /* BBox optimization for difference operation\n         * If the bbox of a multipolygon that's part of the clipping doesn't\n         * intersect the bbox of the subject at all, we can just drop that\n         * multiploygon. */\n\n        if (operation.type === 'difference') {\n          // in place removal\n          var subject = multipolys[0];\n          var _i = 1;\n\n          while (_i < multipolys.length) {\n            if (getBboxOverlap(multipolys[_i].bbox, subject.bbox) !== null) _i++;else multipolys.splice(_i, 1);\n          }\n        }\n        /* BBox optimization for intersection operation\n         * If we can find any pair of multipolygons whose bbox does not overlap,\n         * then the result will be empty. */\n\n\n        if (operation.type === 'intersection') {\n          // TODO: this is O(n^2) in number of polygons. By sorting the bboxes,\n          //       it could be optimized to O(n * ln(n))\n          for (var _i2 = 0, _iMax = multipolys.length; _i2 < _iMax; _i2++) {\n            var mpA = multipolys[_i2];\n\n            for (var j = _i2 + 1, jMax = multipolys.length; j < jMax; j++) {\n              if (getBboxOverlap(mpA.bbox, multipolys[j].bbox) === null) return [];\n            }\n          }\n        }\n        /* Put segment endpoints in a priority queue */\n\n\n        var queue = new Tree(SweepEvent.compare);\n\n        for (var _i3 = 0, _iMax2 = multipolys.length; _i3 < _iMax2; _i3++) {\n          var sweepEvents = multipolys[_i3].getSweepEvents();\n\n          for (var _j = 0, _jMax = sweepEvents.length; _j < _jMax; _j++) {\n            queue.insert(sweepEvents[_j]);\n\n            if (queue.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n              // prevents an infinite loop, an otherwise common manifestation of bugs\n              throw new Error('Infinite loop when putting segment endpoints in a priority queue ' + '(queue size too big). Please file a bug report.');\n            }\n          }\n        }\n        /* Pass the sweep line over those endpoints */\n\n\n        var sweepLine = new SweepLine(queue);\n        var prevQueueSize = queue.size;\n        var node = queue.pop();\n\n        while (node) {\n          var evt = node.key;\n\n          if (queue.size === prevQueueSize) {\n            // prevents an infinite loop, an otherwise common manifestation of bugs\n            var seg = evt.segment;\n            throw new Error(\"Unable to pop() \".concat(evt.isLeft ? 'left' : 'right', \" SweepEvent \") + \"[\".concat(evt.point.x, \", \").concat(evt.point.y, \"] from segment #\").concat(seg.id, \" \") + \"[\".concat(seg.leftSE.point.x, \", \").concat(seg.leftSE.point.y, \"] -> \") + \"[\".concat(seg.rightSE.point.x, \", \").concat(seg.rightSE.point.y, \"] from queue. \") + 'Please file a bug report.');\n          }\n\n          if (queue.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n            // prevents an infinite loop, an otherwise common manifestation of bugs\n            throw new Error('Infinite loop when passing sweep line over endpoints ' + '(queue size too big). Please file a bug report.');\n          }\n\n          if (sweepLine.segments.length > POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS) {\n            // prevents an infinite loop, an otherwise common manifestation of bugs\n            throw new Error('Infinite loop when passing sweep line over endpoints ' + '(too many sweep line segments). Please file a bug report.');\n          }\n\n          var newEvents = sweepLine.process(evt);\n\n          for (var _i4 = 0, _iMax3 = newEvents.length; _i4 < _iMax3; _i4++) {\n            var _evt = newEvents[_i4];\n            if (_evt.consumedBy === undefined) queue.insert(_evt);\n          }\n\n          prevQueueSize = queue.size;\n          node = queue.pop();\n        } // free some memory we don't need anymore\n\n\n        rounder.reset();\n        /* Collect and compile segments we're keeping into a multipolygon */\n\n        var ringsOut = RingOut.factory(sweepLine.segments);\n        var result = new MultiPolyOut(ringsOut);\n        return result.getGeom();\n      }\n    }]);\n\n    return Operation;\n  }(); // singleton available by import\n\n  var operation = new Operation();\n\n  var union = function union(geom) {\n    for (var _len = arguments.length, moreGeoms = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      moreGeoms[_key - 1] = arguments[_key];\n    }\n\n    return operation.run('union', geom, moreGeoms);\n  };\n\n  var intersection$1 = function intersection(geom) {\n    for (var _len2 = arguments.length, moreGeoms = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      moreGeoms[_key2 - 1] = arguments[_key2];\n    }\n\n    return operation.run('intersection', geom, moreGeoms);\n  };\n\n  var xor = function xor(geom) {\n    for (var _len3 = arguments.length, moreGeoms = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      moreGeoms[_key3 - 1] = arguments[_key3];\n    }\n\n    return operation.run('xor', geom, moreGeoms);\n  };\n\n  var difference = function difference(subjectGeom) {\n    for (var _len4 = arguments.length, clippingGeoms = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      clippingGeoms[_key4 - 1] = arguments[_key4];\n    }\n\n    return operation.run('difference', subjectGeom, clippingGeoms);\n  };\n\n  var index = {\n    union: union,\n    intersection: intersection$1,\n    xor: xor,\n    difference: difference\n  };\n\n  return index;\n\n})));\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bbox_polygon_1 = __importDefault(require(\"@turf/bbox-polygon\"));\nvar difference_1 = __importDefault(require(\"@turf/difference\"));\nvar utils_1 = require(\"./utils\");\nvar style_1 = require(\"./style\");\nvar maskPlugin = function (map, target, atts) {\n    map.on('load', function (e) { return __awaiter(void 0, void 0, void 0, function () {\n        var maskGeojsonObject, inner, fillMask, coords, geojsonBounds, fittedBounds, _a, _b, left, bottom, _c, right, top, outer, donut;\n        return __generator(this, function (_d) {\n            switch (_d.label) {\n                case 0: return [4 /*yield*/, utils_1.parseGeoJSONAtt(atts.maskGeojson)];\n                case 1:\n                    maskGeojsonObject = _d.sent();\n                    if (!maskGeojsonObject) {\n                        return [2 /*return*/];\n                    }\n                    inner = maskGeojsonObject.features[0];\n                    if (!utils_1.isPolygonFeature(inner)) {\n                        return [2 /*return*/];\n                    }\n                    fillMask = atts.fillMask.toUpperCase() === 'on';\n                    coords = maskGeojsonObject.features[0].geometry.coordinates[0];\n                    geojsonBounds = utils_1.getBbox(coords);\n                    // TODO: 非同期処理を確認\n                    map.fitBounds(geojsonBounds, { duration: 0, padding: 30 });\n                    fittedBounds = map.getBounds();\n                    map.setMaxBounds(fittedBounds);\n                    _a = fittedBounds.toArray(), _b = _a[0], left = _b[0], bottom = _b[1], _c = _a[1], right = _c[0], top = _c[1];\n                    outer = bbox_polygon_1.default([left, bottom, right, top]);\n                    donut = difference_1.default(outer, inner);\n                    if (!donut) {\n                        return [2 /*return*/];\n                    }\n                    map.addSource('geolonia-mask-plugin', { type: \"geojson\", data: donut });\n                    map.addLayer(style_1.maskStyle({ id: \"geolonia-mask-plugin-fill\", source: \"geolonia-mask-plugin\", fillMask: fillMask }));\n                    return [2 /*return*/];\n            }\n        });\n    }); });\n};\nwindow.geolonia.registerPlugin(maskPlugin);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.maskStyle = void 0;\nvar maskStyle = function (_a) {\n    var id = _a.id, source = _a.source, fillMask = _a.fillMask;\n    return {\n        id: id,\n        source: source,\n        type: \"fill\",\n        filter: ['==', '$type', 'Polygon'],\n        paint: {\n            \"fill-color\": \"white\",\n            'fill-opacity': fillMask ? 0.9 : 0,\n            'fill-outline-color': '#aaa'\n        }\n    };\n};\nexports.maskStyle = maskStyle;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBbox = exports.parseGeoJSONAtt = exports.isPolygonFeature = void 0;\nvar isCssSelector = function (str) {\n    if (/^https?:\\/\\//.test(str)) {\n        return false;\n    }\n    else if (/^\\//.test(str)) {\n        return false;\n    }\n    else if (/^\\.\\//.test(str)) {\n        return false;\n    }\n    else if (/^\\.\\.\\//.test(str)) {\n        return false;\n    }\n    else {\n        try {\n            return document.querySelector(str);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n};\nvar isGeoJSON = function (obj) {\n    if (!obj || obj.type !== 'FeatureCollection' || !Array.isArray(obj.features)) {\n        return false;\n    }\n    else {\n        return true;\n    }\n};\nvar isPolygonFeature = function (feature) {\n    return !!feature &&\n        !!feature.geometry &&\n        !!feature.geometry.type &&\n        feature.geometry.type.toLowerCase() === 'polygon';\n};\nexports.isPolygonFeature = isPolygonFeature;\n/**\n * Parse Geolonia Embed attribute like data-geojson\n * @param att attribute\n * @returns GeoJSON object if exists\n */\nvar parseGeoJSONAtt = function (att) { return __awaiter(void 0, void 0, void 0, function () {\n    var json, el, res;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!att) return [3 /*break*/, 5];\n                json = void 0;\n                el = isCssSelector(att);\n                if (!(el && el.textContent)) return [3 /*break*/, 1];\n                try {\n                    json = JSON.parse(el.textContent);\n                }\n                catch (error) {\n                    console.error(error);\n                    return [2 /*return*/, null];\n                }\n                return [3 /*break*/, 4];\n            case 1: return [4 /*yield*/, fetch(att)];\n            case 2:\n                res = _a.sent();\n                return [4 /*yield*/, res.json()];\n            case 3:\n                json = _a.sent();\n                _a.label = 4;\n            case 4:\n                if (isGeoJSON(json)) {\n                    return [2 /*return*/, json];\n                }\n                else {\n                    return [2 /*return*/, null];\n                }\n                return [3 /*break*/, 6];\n            case 5: return [2 /*return*/, null];\n            case 6: return [2 /*return*/];\n        }\n    });\n}); };\nexports.parseGeoJSONAtt = parseGeoJSONAtt;\nvar getBbox = function (coordinates) {\n    var _a = coordinates[0], firstX = _a[0], firstY = _a[1];\n    var initialBbox = [firstX, firstY, firstX, firstY];\n    return coordinates.reduce(function (prev, _a) {\n        var x = _a[0], y = _a[1];\n        return ([\n            Math.min(prev[0], x),\n            Math.min(prev[1], y),\n            Math.max(prev[2], x),\n            Math.max(prev[3], y),\n        ]);\n    }, initialBbox);\n};\nexports.getBbox = getBbox;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"sourceRoot":""}